APPROACH 1:-

#include <bits/stdc++.h>
//brute force 1

void setZeros(vector<vector<int>> &matrix)
{ 
	int n =matrix.size();//row
	int m= matrix[0].size();
	
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(matrix[i][j]==0)
			{
				for(int k=0;k<m;k++)
	            if(matrix[i][k]!=0)
	            matrix[i][k]=-1;
				
				for(int k=0;k<n;k++)
	            if(matrix[k][j]!=0)
	            matrix[k][j]=-1;
			}
		}
	}
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(matrix[i][j]==-1)
			{
				matrix[i][j]=0;
			}
		}
	}
	
}


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
APPROACH 2:-

#include <bits/stdc++.h>
//approach 2 O(n2)
void setZeros(vector<vector<int>> &matrix)
{
	int n=matrix.size();
	int m=matrix[0].size();
	vector<int>rowc(n,0);
	vector<int>colc(m,0);
	for(int i=0;i<n;i++)
	{
          for (int j = 0; j < m; j++) {
            if (matrix[i][j] == 0) {
              colc[j] = 1;
              rowc[i] = 1;
            }
          }
    }
    for(int i=0;i<n;i++)
	{
          for (int j = 0; j < m; j++) {
         if(rowc[i]==1||colc[j]==1)
		   matrix[i][j]=0;
		  }
        }
}


--------------------------------------------------------------------------------------------------------------------------------------------------------------------

APPROACH 3

#include <bits/stdc++.h>
//approach 3 O(n2) sc=O(1) optimised approach
void setZeros(vector<vector<int>> &matrix)
{
	int n=matrix.size();
	int m=matrix[0].size();
	int col0=1;
	for(int i=0;i<n;i++)
	{
          for (int j = 0; j < m; j++) {
            if (matrix[i][j] == 0) {
              //mark the i-th row
              matrix[i][0]=0;
              //mark the j-th col
              if(j!=0)
              matrix[0][j] = 0;
              else col0=0;
            }
          }
    }

    for(int i=1;i<n;i++)
	{
          for (int j = 1; j < m; j++) {
            if (matrix[i][j] != 0) {
              if (matrix[0][j] == 0 || matrix[i][0] == 0)
                matrix[i][j] = 0;
            }
          }
        }

        if(matrix[0][0]==0)
        {
          for(int i=0;i<m;i++)
          matrix[0][i]=0;
        }
        if (col0 == 0) {
          for (int i = 0; i < n; i++)
            matrix[i][0] = 0;
        }
}
